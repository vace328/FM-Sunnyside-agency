@import url("https://fonts.googleapis.com/css2?family=Barlow:wght@600&family=Fraunces:wght@700;900&display=swap");
/*----------  base
------------------------------------------------------------------------------*/
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

body {
  font-family: "Barlow";
  font-size: 18px;
}

h2, h3 {
  font-size: 40px;
  color: hsl(212, 27%, 19%);
  font-family: "Fraunces";
}

h3 {
  font-size: 32px;
  letter-spacing: 0.32px;
  text-align: center;
  font-weight: 900;
  line-height: normal;
}

p {
  color: hsl(210, 4%, 67%);
  line-height: 164%; /* 29.52px */
  letter-spacing: -0.126px;
  text-align: center;
}

/*----------  helpers
------------------------------------------------------------------------------*/
/*----------  components
------------------------------------------------------------------------------*/
.hero {
  min-height: 448px;
  background-image: url("../images/mobile/image-header.jpg");
  background-size: cover;
  background-position: center bottom;
  background-repeat: no-repeat;
  display: block;
  padding-top: 54px;
}
.hero h2 {
  color: hsl(0, 0%, 100%);
  font-size: 40px;
  font-weight: 900;
  letter-spacing: 7px;
  text-transform: uppercase;
  text-align: center;
  line-height: normal;
}
.hero .arrow {
  padding-top: 48px;
  text-align: center;
}

@media screen and (min-width: 800px) {
  .hero {
    height: 673px;
    background-size: cover;
    background-image: url("../images/desktop/image-header.jpg");
    padding-top: 68px;
  }
  .hero h2 {
    font-size: 56px;
    letter-spacing: 9px;
  }
  .hero .arrow {
    padding-top: 92px;
  }
}
/*----------  libs
------------------------------------------------------------------------------*/
/*----------  layout
------------------------------------------------------------------------------*/
header {
  color: #ebebd3;
  padding: 32px 16px;
  position: relative;
  background-color: aquamarine;
}

.primary-navigation {
  position: absolute;
  top: calc(100% + 16px);
  left: 50%;
  transform: translateX(-50%);
  background: hsl(0, 0%, 100%);
  transition: -webkit-clip-path ease-in-out 700ms;
  transition: clip-path ease-in-out 700ms;
  transition: clip-path ease-in-out 700ms, -webkit-clip-path ease-in-out 700ms;
  margin: 0;
  padding: 0;
  padding-top: 42px;
  list-style: none;
  width: calc(100% - 32px);
}

.primary-navigation::before {
  position: absolute;
  z-index: 100;
  bottom: 100%;
  right: 0%;
  content: "";
  display: block;
  width: 0;
  height: 0;
  border-top: 24px solid transparent;
  border-bottom: 24px solid hsl(0, 0%, 100%);
  border-left: 24px solid transparent;
}

.primary-navigation[data-state=opened] {
  animation: clipPathCircleOpen 750ms ease-in-out forwards;
  display: block;
}

.primary-navigation[data-state=closing] {
  animation: clipPathCircleClose 750ms ease-in-out forwards;
}

.primary-navigation[data-state=closed] {
  display: none;
}

@keyframes clipPathCircleOpen {
  0% {
    -webkit-clip-path: circle(0% at top right);
            clip-path: circle(0% at top right);
  }
  100% {
    -webkit-clip-path: circle(250% at top right);
            clip-path: circle(250% at top right);
  }
}
@keyframes clipPathCircleClose {
  0% {
    -webkit-clip-path: circle(250% at top right);
            clip-path: circle(250% at top right);
  }
  100% {
    -webkit-clip-path: circle(0% at top right);
            clip-path: circle(0% at top right);
  }
}
.nav-item {
  margin-bottom: 37px;
}

.nav-item:nth-child(3) {
  margin-bottom: 32px;
}

.nav-item.btn-accent {
  background-color: hsl(51, 100%, 49%);
  border-radius: 28px;
  font-family: Fraunces;
  font-weight: 700;
  padding: 21px;
  width: 140px;
  text-transform: uppercase;
  margin: 0px auto 37px auto;
}

.nav-item a {
  color: hsl(232, 10%, 55%);
  display: block;
  text-decoration: none;
  text-align: center;
  font-size: 20px;
  letter-spacing: -0.2px;
}

.nav-item:hover a {
  color: hsl(51, 100%, 49%);
}

.nav-item.btn-accent a {
  font-size: 16px;
  letter-spacing: -0.8px;
  color: hsl(212, 27%, 19%);
}

.nav-item.btn-accent:hover a {
  color: hsl(0, 0%, 100%);
}

.menu-toggle {
  background: transparent;
  border: 0;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 9px;
  cursor: pointer;
}

.menu-toggle:after {
  position: absolute;
  content: "";
  top: -200%;
  right: 6px;
  background: transparent;
  display: block;
  width: 24px;
  height: 24px;
}

.hamburger,
.hamburger::before,
.hamburger::after {
  content: "";
  display: block;
  background: hsl(0, 0%, 100%);
  height: 2px;
  width: 24px;
  border-radius: 3px;
  transition: all ease-in-out 500ms;
}

.hamburger::before {
  transform: translateY(-8px);
}

.hamburger::after {
  transform: translateY(5px);
}

[aria-expanded=true] .hamburger {
  transform: rotate(45deg);
}

[aria-expanded=true] .hamburger::before {
  opacity: 0;
}

[aria-expanded=true] .hamburger::after {
  transform: translateY(-2px) rotate(-90deg);
}

.visually-hidden {
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

@media screen and (min-width: 800px) {
  header {
    padding: 46px 32px;
  }
  .logo img {
    width: 170px;
  }
  .primary-navigation,
  .primary-navigation[data-state=closed] {
    display: flex;
    flex-direction: row;
    top: 50%;
    transform: translateY(-50%);
    right: 40px;
    width: auto;
    padding-top: 0px;
    align-items: center;
    justify-content: flex-end;
    background: unset;
  }
  .primary-navigation::before {
    display: none;
  }
  .menu-toggle {
    display: none;
  }
  .nav-item a {
    padding: 0 1em;
    color: hsl(0, 0%, 100%);
    letter-spacing: -0.18px;
    font-size: 18px;
  }
  .nav-item {
    margin-bottom: 0;
    margin-right: 12px;
  }
  .nav-item:nth-child(1) {
    margin-right: 16px;
  }
  .nav-item:nth-child(3) {
    margin-bottom: 0px;
    margin-right: 30px;
  }
  .nav-item.btn-accent {
    padding: 20px 15px;
    width: auto;
    margin: 0px;
    background-color: hsl(0, 0%, 100%);
  }
  .nav-item.btn-accent:hover {
    background-color: rgba(255, 255, 255, 0.8);
  }
  .nav-item.btn-accent:hover a {
    color: hsl(212, 27%, 19%);
  }
}
article {
  background: #fff;
}

.article-1-img {
  background: url("../images/mobile/image-transform.jpg");
}

.article-2-img {
  background: url("../images/mobile/image-stand-out.jpg");
}

.services article .article-img-container {
  min-height: 312px;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}

.article-text-container {
  padding: 20px;
  padding-top: 64px;
  padding-bottom: 67px;
}
.article-text-container h3 {
  margin-bottom: 24px;
}
.article-text-container p {
  margin-bottom: 36px;
}

.btn-link {
  text-decoration: none;
  color: hsl(212, 27%, 19%);
  text-transform: uppercase;
  display: block;
  font-family: "Fraunces";
  font-size: 900;
  font-size: 16px;
  text-align: center;
  position: relative;
  z-index: 10;
  line-height: normal;
  letter-spacing: 0.48px;
}
.btn-link::before {
  display: block;
  position: absolute;
  content: "";
  width: 132px;
  height: 12px;
  background: hsl(51, 100%, 49%);
  top: 100%;
  left: 50%;
  transform: translate(-50%, -8px);
  border-radius: 8px;
  z-index: -1;
  opacity: 0.3;
  transition: 1s;
}

.btn-link:hover::before {
  animation-name: shake;
  animation-duration: 0.2s;
  animation-iteration-count: 3;
  animation-timing-function: ease;
  opacity: 1;
}

.services article:nth-of-type(2) .btn-link::before {
  background: hsl(7, 99%, 70%);
}

@media screen and (min-width: 1330px) {
  article {
    min-height: 600px;
  }
  .article-text-container {
    padding-top: 158px;
    padding-bottom: 161px;
    padding-left: 156px;
  }
  .article-text-container h3 {
    font-size: 40px;
    margin-bottom: 34px;
    text-align: left;
    max-width: 440px;
    line-height: normal;
    letter-spacing: 0px;
  }
  .article-text-container p {
    font-size: 18px;
    margin-bottom: 42px;
    text-align: left;
    max-width: 440px;
  }
  .btn-link {
    text-align: left;
    padding-left: 10px;
  }
  .btn-link::before {
    width: 136px;
    height: 12px;
    top: 100%;
    left: 0;
    transform: translate(0, -8px);
    border-radius: 8px;
    z-index: -1;
    opacity: 0.3;
  }
  article:nth-of-type(2) .article-text-container {
    padding-top: 156px;
    padding-left: 109px;
  }
  .btn-link:hover::before {
    animation-name: shakeLG;
  }
}
@keyframes shake {
  0% {
    left: 50.4%;
  }
  50% {
    left: 49.6%;
  }
  100% {
    left: 50%;
  }
}
@keyframes shakeLG {
  0% {
    left: 0.4%;
  }
  50% {
    left: -0.4%;
  }
  100% {
    left: 0%;
  }
}
/*----------  pages
------------------------------------------------------------------------------*/
/*----------  vendors
------------------------------------------------------------------------------*/
* {
  box-sizing: border-box;
}

body {
  background: #509bfd;
}

section img {
  width: 100%;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
